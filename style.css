/* Baseline <body> styling */
body {
    /* set font */
    font-family: Arial, sans-serif;
    /* remove any initial margin [margins are used to create space around elements, outside of any defined borders] */
    margin: 0;
    /* remove any intital padding [padding is used to create space around an element's content, inside of any defined borders] */
    padding: 0;
    /* set background colour */
    background-color: #161b24;
}


/* 

*/


/* Main parent container styling */
section {
    /* initialise grid */
    display: grid;
    /* create responsive grid (maximum 2 columns, minimum column width 320px, share remaining space evenly between columns (i.e. respond to screen size)) */
    grid-template-columns: repeat(2, minmax(320px, 1fr));
    /* space out grid elements */
    gap: 2em;
    /* create space between elements and top/sides of screen */
    padding: 2em;
    /* centre text in elements */
    text-align: center;
}

/* force 1 column layout if screen width < 640px (to prevent overflow (because min column width 320px SEE LINE 23)) [the @media rule is used in media queries to apply different styles for different media types/devices. Media queries can be used to check many things, such as: width and height of the viewport, width and height of the device, orientation (is the tablet/phone in landscape or portrait mode?), resolution] */
@media (max-width: 640px) {
    section {
        grid-template-columns: 1fr;
    }
}


/* 

*/


/* Set default <article> height to 90% of viewport */
article {
    height: 90vh;
}


/* 

*/


/* 1. GLOW PINK */

/* Main container */
.glow-pink-container {
    /* initialise flex container */
    display: flex;
    /* order child elements vertically */
    flex-direction: column;
    /* space elements evenly */
    justify-content: space-between;
    /* create space between card edges and text (specifically top and bottom edges) */
    padding: 2em;
    /* include any padding and borders in total dimensions (width and height) of element */
    box-sizing: border-box;
    /* create 3 different coloured background layers [CSS gradients let you display smooth transitions between two or more specified colours: linear gradient = goes down/up/left/right/diagonally] */
    background:
        linear-gradient(#1fa2ff, transparent),
        linear-gradient(to top left, #f12711, #f5af19),
        linear-gradient(to top right, #a5ffcb, transparent);
    /* blend background layers together */
    background-blend-mode: screen;
    /* slightly curve element edges */
    border-radius:1%;
    /* set font size */
    font-size: 1rem;
    /*  set character (text) thickness */
    font-weight: bold;
    /* call animation SEE LINE 108 (params = name, duration, number of iterations */
    animation: glow-pink 2.5s infinite;
    /* set background size to twice width of element (facilitates animation - creates glowing effect by moving background position repeatedly) */
    background-size: 200% 100%;
    /* set initial text colour */
    color: #000;
}

/* Set text colour to white on hover */
.glow-pink-container:hover {
    color: #fff;
}

/* Set text to disappear over 5s duration on hover*/
.glow-pink-container:hover p {
    opacity: 0;
    transition: opacity 5s;
}
/* transition text opacity back to 1 over 5s duration off hover */
.glow-pink-container:not(:hover) p {
    transition: opacity 5s;
}

/* Define 'glow-pink' animation [the @keyframes rule specifies animation code - animations are created by gradually changing from one set of CSS styles to another] */
@keyframes glow-pink {
    /* At 0% stage, background is in top left corner (1st value = horizontal position starting from left, 2nd value = vertical position starting from top) */
    0% {
        background-position: 0% 0%;
    }
    /* By 50% stage of animation, background has moved to bottom right corner */
    50% {
        background-position: 100% 100%;
    }
    /* By end of animation, background has moved back to top left corner */
    100% {
        background-position: 0% 0%;
    }
}


/* 

*/


.disappear-container {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: 2em;
    margin: 0 4em;
    box-sizing: border-box;
    background:
        linear-gradient(#1fa2ff, transparent),
        linear-gradient(to top left, #c33764, #1d2671),
        linear-gradient(to top right, #1d1f1e, transparent);
    background-blend-mode: screen;
    border-radius:1%;
    font-size: 1rem;
    font-weight: bold;
    color: #fff;
    opacity: 1;
    transition: opacity 5s;
}

.disappear-container:hover {
    opacity: 0;
    transition: opacity 1.5s;
    transition-delay: 1s;
}

.disappear-container:hover p {
    text-decoration: line-through;
    opacity: 0;
    transition: opacity 1.5s;
}


/* 

*/


.class3 {
    display: flex;
    flex-direction: column;
    padding: 1em;
    box-sizing: border-box;
    background:
        linear-gradient(to top left, #f12711, #f5af19),
        linear-gradient(to top right, #a5ffcb, transparent);
    background-blend-mode: screen;
    border-radius:25%;
    font-size: 1rem;
    font-weight: bold;
    font-family: 'Courier New', Courier, monospace;
    animation: breathe 2.5s infinite;
}

.class3 p {
    transform: translateY(0);
    transition: transform 1.5s ease;
}

.class3:hover {
    font-weight: 100;
}

.class3:hover p {
    transform: translateY(calc(50vh - 1em));
    transition: transform 2s ease;
}

@keyframes breathe {
    0% {
        border-radius: 25%;
    }
    50% {
        border-radius: 1%;
    }
    100% {
        border-radius: 25%;
    }
}


.class4 {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: 3rem;
    box-sizing: border-box;
    font-size: 1rem;
    background-image: url(https://mfiles.alphacoders.com/100/1008760.png);
    background-size: cover;
    font-size: 1rem;
    font-weight: bolder;
    color: #fff;
    border-radius: 0%;
    filter: grayscale(none);
    transition: border-radius 1.5s ease, filter 1.5s ease;
}

.class4:hover {
    filter: grayscale(100);
    border-radius: 35% 15%;
    transition: filter 2.5s ease, border-radius 2.5s ease-out;
}


.class5 {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: 1.5em;
    box-sizing: border-box;
    background:
        linear-gradient(to top left, #c33764, #1d2671),
        linear-gradient(to top right, #1d1f1e, transparent);
    background-blend-mode: screen;
    border-radius: 3%;
    font-size: 1rem;
    font-weight: bold;
}

.class5:hover {
    overflow: auto;
    animation: mid-gradient 5s infinite;
    background-size: 200% 100%;
    filter: contrast(15);
    filter: saturate(4);
}

.class5:hover p:nth-child(1) {
    color: #fff;
}
.class5:hover p:nth-child(2) {
    color: #fff;
    transition: color;
    transition-delay: 0.5s;
}
.class5:hover p:nth-child(3) {
    color: #fff;
    transition: color;
    transition-delay: 1s;
}
.class5:hover p:nth-child(4) {
    color: #fff;
    transition: color;
    transition-delay: 1.5s;
}
.class5:hover p:nth-child(5) {
    color: #fff;
    transition: color;
    transition-delay: 2s;
}


.class6 {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: 2em;
    box-sizing: border-box;
    border: solid 0.5rem #fff;
    border-radius: 40%;
    box-shadow: 0 0 0.5rem 0.6rem #fff;
    transition: border-radius 1.5s ease, box-shadow 4s ease;
    font-size: 1rem;
    font-family: 'Courier New', Courier, monospace;
    font-weight: bolder;
    color: #161b24;
}

.class6:hover {
    box-shadow: 0 0 1rem 1rem #fff;
    border-radius: 1%;
    transition: border-radius 2.5s 2s;
}

.class6:hover p:nth-child(1) {
    color: #fff;
    transition: color 1.5s;
}

.class6:hover p:nth-child(2) {
    color: #fff;
    transition: color 1.5s;
    transition-delay: 0.74s;
    font-size: 1.5rem;
}

.class6:hover p:nth-child(3) {
    color: #fff;
    transition: color 1.5s;
    transition-delay: 1.5s;
    font-size: 2rem;
}


/* 

 */


/* 7. FLIP CARD */

/* Main container: */
.flip-card-container {
    /* make transparent */
    background-color: transparent;
    /* set span of 3d rotation [the perspective property is used to give a 3D-positioned element some perspective - a lower value will result in a more intensive 3D effect than a higher value] */
    perspective: 1200px;
    /* reduce element width */
    padding: 0.2em;
}

/* Inner container */
.flip-card-inner-container {
    /* match height of parent (.flip-card) */
    height: 100%;
    /* set card rotation speed (transformation takes 0.8s) */
    transition: transform 0.8s;
    /* render children (.flip-card-front, .flip-card-back) correctly whilst card rotates [the transform-style property specifies how nested elements are rendered in 3D space] */
    transform-style: preserve-3d;
  }

  /* When main container is hovered over, rotate inner container by 180 degrees on Y axis */
  .flip-card-container:hover .flip-card-inner-container {
    transform: rotateX(180deg);
  }

  /* Front and back of card joint styling*/
  .flip-card-front, .flip-card-back {
    /* layer card front and back sides on top of each other (absolute position removes elements from the document flow, allowing overlap) */
    position: absolute;
    /* Match width and height of parent (.flip-card-inner) */
    width: 100%;
    height: 100%;
    /* ensure only 1 side of card visible at any one time during rotation */
    backface-visibility: hidden;
    /* curve card edges */
    border-radius: 12.5%;
    /* scale image down to fit background */
    background-size: cover;
  }

  /* Front of card image */
  .flip-card-front {
    background-image: url(https://wallpaper.forfun.com/fetch/e0/e0969d284a6e520bcd659dd968fa28f8.jpeg);
  }

  /* Back of card */
  .flip-card-back {
    /* initialise flex container */
    display: flex;
    /* order child elements (text) vertically */
    flex-direction: column;
    /* space text evenly */
    justify-content: space-between;
    /* create space between card edges and text (specifically top and bottom edges) */
    padding: 3em;
    /* include any padding and border in total dimensions of element */
    box-sizing: border-box;
    /* back of card image */
    background-image: url(https://i.pinimg.com/736x/eb/7b/10/eb7b10a9252c3d5efe912b6112654508.jpg);
    /* text color = white */
    color: #fff;
    /* set back or card to initial 180deg rotation (i.e. back side starts facing away) */
    transform: rotateX(180deg);
    /* set character thickness */
    font-weight: bolder;
    /* set font-size */
    font-size: 1rem;
  }


/* 

*/


/* 8.  */


.class8-container {
    box-sizing: border-box;
    font-size: 1rem;
    background-size: 200% 100%;
    padding: 0 2rem;
    /* background: */
        linear-gradient(red, transparent),
        linear-gradient(to top left, lime, transparent),
        linear-gradient(to top right, blue, transparent);
    background-blend-mode: screen;
    animation: mid-gradient 3s infinite;
    background-size: 200% 100%;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
}

.letter {
    padding: 1em;
    box-sizing: border-box;
    height: 100%;
    display: grid;
    align-items: center;
    justify-items: center;
    height: 30%;
    width: 30%;
}

.big-block {
	height: 45%; width: 45%;
    display: grid;
    grid-template-columns: repeat(2,1fr);
    grid-template-rows: repeat(2,1fr);
    grid-template-areas: 
        "lb-1 lb-2"
        "lb-3 lb-4";
    padding: 0.5em;
}

.little-block {
    background-color: #fff;
}

.lb1 { 
    grid-area: lb-1;
}
.lb2 {
    grid-area: lb-2;
}
.lb3 {
    grid-area: lb-3;
}
.lb4 {
    grid-area: lb-4;
}

.bb-1 {
    grid-area: bb-1;
}
.bb-2 {
    grid-area: bb-2;
}
.bb-3 {
    grid-area: bb-3;
}
.bb-4 {
    grid-area: bb-4;
}
.bb-5 {
    grid-area: bb-5;
}
.bb-6 {
    grid-area: bb-6;
}
.bb-7 {
    grid-area: bb-7;
}
.bb-8 {
    grid-area: bb-8;
}
.bb-9 {
    grid-area: bb-9;
}
.bb-10 {
    grid-area: bb-10;
}
.bb-11 {
    grid-area: bb-11;
}
.bb-12 {
    grid-area: bb-12;
}

.big-block {
    transition: 1.5s cubic-bezier(.12,.71,0,1);
}

.letter:hover .lb-1 { transform: translate(-0.5rem,-2rem); }
.letter:hover .lb-2 { transform: translate(-1rem,+1.5rem); }
.letter:hover .lb-3 { transform: translate(+1.5rem,-1rem); }
.letter:hover .lb-4 { transform: translate(+2rem,+0.5rem); }
.letter:hover .bb-1 { transform: translate(-3.5rem,-3.5rem); }
.letter:hover .bb-2 { transform: translate(-4rem,-3rem); }
.letter:hover .bb-3 { transform: translate(-4.5rem,-2rem); }
.letter:hover .bb-4 { transform: translate(-5rem,+1.5rem); }
.letter:hover .bb-5 { transform: translate(+2rem,+2.5rem); }
.letter:hover .bb-6 { transform: translate(+3rem,+3.5rem); }
.letter:hover .bb-7 { transform: translate(+2rem,+2rem); }
.letter:hover .bb-8 { transform: translate(+2.5rem,+2.5rem); }
.letter:hover .bb-9 { transform: translate(+2.5rem,+1.5rem); }
.letter:hover .bb-10 { transform: translate(+4rem,-2rem); }
.letter:hover .bb-11 { transform: translate(+2.5rem,-3.5rem); }
.letter:hover .bb-12 { transform: translate(+1.5rem,-5rem); }

.letter:nth-child(1):hover .little-block {
    background-color: #ff1fb4;
}
.letter:nth-child(2):hover .little-block {
    background-color: #ffb81f;
}
.letter:nth-child(3):hover .little-block {
    background-color: #1fcbff;
}
.letter:not(:hover) .little-block {
    transition: background-color 1s;
}

.and-letter-a {
    grid-template-areas: 
        ". . bb-1 bb-2 . ."
        ". bb-3 . . bb-4 ."
        ". bb-5 bb-6 bb-7 bb-8 ."
        ". bb-9 . . bb-10 ."
        ". bb-11 . . bb-12 .";
}
.and-letter-n {
    grid-template-areas:
        ". bb-1 . . bb-2 ."
        ". bb-3 bb-4 . bb-5 ."
        ". bb-6 . bb-7 bb-8 ."
        ". bb-9 . . bb-10 ."
        ". bb-11 . . bb-12 .";
}
.and-letter-d {
    grid-template-areas:
        ". bb-1 bb-2 bb-3 . ."
        ". bb-4 . . bb-5 ."
        ". bb-6 . . bb-7 ."
        ". bb-8 . . bb-9 ."
        ". bb-10 bb-11 bb-12 . .";
}

.you-letter-y {
    grid-template-areas: 
    ". bb-1 . . . bb-2 ."
    ". . bb-3 . bb-4 . ."
    ". . . bb-5 . . ."
    ". . . bb-6 . . ."
    ". . . bb-7 . . .";
}
.you-letter-o {
    grid-template-areas:
    ". . bb-1 bb-2 . ."
    ". bb-3 . . bb-4 ."
    ". bb-5 . . bb-6 ."
    ". bb-7 . . bb-8 ."
    ". . bb-9 bb-10 . ."
    ;
}
.you-letter-u {
    grid-template-areas:
    ". bb-1 . . bb-2 ."
    ". bb-3 . . bb-4 ."
    ". bb-5 . . bb-6 ."
    ". bb-7 . . bb-8 ."
    ". . bb-9 bb-10 . .";
}

.are-letter-a {
    grid-template-areas: 
        ". . bb-1 bb-2 . ."
        ". bb-3 . . bb-4 ."
        ". bb-5 bb-6 bb-7 bb-8 ."
        ". bb-9 . . bb-10 ."
        ". bb-11 . . bb-12 .";
}
.are-letter-r {
    grid-template-areas:
    ". . bb-1 bb-2 . ."
    ". bb-3 . . bb-4 ."
    ". bb-5 . . bb-6 ."
    ". bb-7 bb-8 bb-9 . ."
    ". bb-10 . . bb-11 .";
}
.are-letter-e {
    grid-template-areas:
    ". bb-1 bb-2 bb-3 bb-4 ."
    ". bb-5 . . . ."
    ". bb-6 bb-7 . . ."
    ". bb-8 . . . ."
    ". bb-9 bb-10 bb-11 bb-12 ."
    ;
}


footer {
     /* padding: ;
    background-color: ;
    border: ; */
}

